{"version":3,"sources":["webpack:///./src/App.vue?b269","webpack:///./src/App.vue","webpack:///src/App.vue","webpack:///./src/landscape.js","webpack:///src/landscape.vue","webpack:///./src/landscape.vue?8aae","webpack:///./src/landscape.vue","webpack:///./src/route.js","webpack:///./src/main.js"],"names":["selectortype_template_index_0_src_App","render","_h","this","$createElement","_c","_self","attrs","id","staticRenderFns","src_App","__webpack_require__","normalizeComponent","name","ssrContext","Landscape","_ref","el","background","width","height","classCallCheck_default","ele","style","backgroundColor","canvas","getContext","elements","flower","grass","init","initFlowerDraw","initGlass","initBackdrop","b_grad","createLinearGradient","addColorStop","save","beginPath","fillStyle","fillRect","restore","tree","x","y","radius","daisyNum","incRandom","i","daisy","floatRandom","weed","image","_this","img","Image","src","onload","moon","moveTo","quadraticCurveTo","fill","s","e","Math","round","random","min","max","param","that","branchs","grap","branch","params","length","pieces","push","pointArr","inc","circulation","j","isEnd","p","reg","angle","cos","sin","a_params","setBranchStructure","points","arc","PI","globalAlpha","pearch","draw","t_params","petals","feelers","setStructure","petalPoint","point1_angle","point1_radius","point1_q_angle","point1_q_radius","point","qpoint","point2_angle","point2_radius","point2_q_angle","point2_q_radius","point3_q_angle","point3_q_radius","feelersNum","l","q_angle","Pl","grad","createRadialGradient","s_grad","c_petal","strokeStyle","grad2","lineWidth","stroke","setDaisyStuct","petalMum","avg_angle","start","left_q","top","right_q","end","X","feelerMum","c_grad","trunk","leafs","setDaisyStruct","init_num","leafNum","gap","s_point","init_len","len","e_point","leaf","selectortype_script_index_0_src_landscape","data","mounted","document","getElementById","w","window","innerWidth","body","clientWidth","h","innerHeight","clientHeight","landscape","selectortype_template_index_0_src_landscape","_m","src_landscape","landscape_normalizeComponent","Vue","use","Router","route","routes","path","component","config","productionTip","router","components","App","template"],"mappings":"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","file":"static/js/app.7c66c6ac71731ee54c23.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-a62adf06\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a62adf06\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a62adf06\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","<template>\n  <div id=\"app\">\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App'\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  padding:0;\n  margin: 0;\n}\n*{\n  padding:0;\n  margin:0;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","class Landscape {\r\n    constructor({\r\n        el,\r\n        background,\r\n        width,\r\n        height\r\n    }) {\r\n        this.ele = el\r\n        this.ele.width = width;\r\n        this.ele.height = height;\r\n        this.ele.style.backgroundColor = background;\r\n        this.canvas = el.getContext(\"2d\")\r\n        this.elements = []\r\n        this.flower = {}\r\n        this.grass = {}\r\n        this.init()\r\n    }\r\n    init() {\r\n        this.initFlowerDraw()\r\n        this.initGlass()\r\n        this.initBackdrop()\r\n    }\r\n    // 渐变天空色展示画面\r\n    initBackdrop() {\r\n        let b_grad = this.canvas.createLinearGradient(0, 0, 0, this.ele.height); //创建一个 渐变色线性对象\r\n        b_grad.addColorStop(0, \"#2a5caa\");\r\n        //定义渐变色颜色\r\n        b_grad.addColorStop(1, \"#afb4db\");\r\n        this.canvas.save();\r\n        this.canvas.beginPath();\r\n        this.canvas.fillStyle = b_grad\r\n        this.canvas.fillRect(0, 0, this.ele.width, this.ele.height);\r\n        this.canvas.restore();\r\n        this.tree({\r\n            x: this.ele.width / 2,\r\n            y: this.ele.height - 10,\r\n            radius: 15\r\n        })\r\n        let daisyNum = this.incRandom(10, 5)\r\n        for (let i = 0; i < daisyNum; i++) {\r\n            let height = this.incRandom(80, 50)\r\n            new this.grass.daisy({\r\n                x: this.ele.width * this.floatRandom(0, 1),\r\n                y: this.ele.height,\r\n                height: height,\r\n                radius: height / 50\r\n            })\r\n        }\r\n        for (let i = 0; i < this.ele.width; i++) {\r\n            new this.grass.weed({\r\n                x: i,\r\n                y: this.ele.height,\r\n            })\r\n        }\r\n    }\r\n    //添加背景图像方式展示画面\r\n    setBglmage(image) {\r\n        let img = new Image();\r\n        img.src = image\r\n        img.onload = () => {\r\n            this.initFlowerDraw()\r\n            this.tree({\r\n                x: this.ele.width / 2,\r\n                y: this.ele.height - 100,\r\n                radius: 15\r\n            })\r\n            this.initGlass()\r\n            this.moon()\r\n            new this.grass.weed({\r\n                x: 100,\r\n                y: 800,\r\n            })\r\n            new this.grass.daisy({\r\n                x: 300,\r\n                y: this.ele.height,\r\n                radius: 2.5,\r\n                height: 200\r\n            })\r\n        }\r\n    }\r\n    //月亮\r\n    moon() {\r\n        this.canvas.save();\r\n        this.canvas.beginPath();\r\n        this.canvas.moveTo(200, 200)\r\n        this.canvas.quadraticCurveTo(265, 250, 180, 300);\r\n        this.canvas.quadraticCurveTo(245, 235, 200, 200);\r\n        this.canvas.fillStyle = 'rgba(255,255,0,0.8)'\r\n        this.canvas.fill();\r\n        this.canvas.restore();\r\n    }\r\n    //随机整数\r\n    incRandom(s, e) {\r\n        return Math.round(s + e * Math.random())\r\n    }\r\n    //随机浮点数\r\n    floatRandom(min, max) {\r\n        return (min + (max - min) * Math.random())\r\n    }\r\n    //树\r\n    tree(param) {\r\n        let that = this\r\n        //this.canvas.globalCompositeOperation =\"source-over\";\r\n        let tree = {\r\n            branchs: [],\r\n            x: param.x,\r\n            y: param.y,\r\n            radius: param.radius,\r\n            grap: 1\r\n        }\r\n        //创建数据结构\r\n        tree.setBranchStructure = function (branch, params) {\r\n            tree.grap++\r\n            if (!branch.length) {\r\n                let pieces = that.incRandom(2, 2)\r\n                for (let i = 0; i < pieces; i++) {\r\n                    branch.push({\r\n                        radius: params.radius,\r\n                        pointArr: [],\r\n                        x: params.x,\r\n                        y: params.y,\r\n                        inc: {\r\n                            x: that.floatRandom(-1.5, 1.5),\r\n                            y: that.floatRandom(3.5, 5),\r\n                        },\r\n                        branchs: []\r\n                    })\r\n                }\r\n            }\r\n            for (let i = 0; i < branch.length; i++) {\r\n\r\n                let circulation = that.incRandom(50, 20)\r\n                for (let j = 0; j < circulation; j++) {\r\n                    if (branch[i].radius < 0.8) {\r\n                        branch[i].isEnd = true\r\n                        break\r\n                    }\r\n                    branch[i].radius *= 0.99\r\n                    branch[i].x += branch[i].inc.x\r\n                    branch[i].y -= branch[i].inc.y\r\n\t                let p = {\r\n                        x: branch[i].x,\r\n                        y: branch[i].y,\r\n                        radius: branch[i].radius\r\n                    }\r\n                    let reg = 0.18 - (0.1 / tree.grap);\r\n                    let angle = that.floatRandom(-reg, reg)\r\n                    branch[i].inc.x = Math.cos(angle) * branch[i].inc.x - Math.sin(angle) * branch[i].inc.y;\r\n                    branch[i].inc.y = Math.sin(angle) * branch[i].inc.x + Math.cos(angle) * branch[i].inc.y;\r\n                    branch[i].pointArr.push(p)\r\n                }\r\n                if (branch[i].radius > 0.8) {\r\n                    branch[i].branchs = []\r\n                    let pieces = that.incRandom(1, 2)\r\n                    for (let j = 0; j < pieces; j++) {\r\n                        branch[i].branchs.push({\r\n                            radius: branch[i].radius,\r\n                            pointArr: [],\r\n                            x: branch[i].x,\r\n                            y: branch[i].y,\r\n                            inc: {\r\n                                x: branch[i].inc.x,\r\n                                y: branch[i].inc.y\r\n                            },\r\n                            branchs: []\r\n                        })\r\n                    }\r\n                    let a_params = {\r\n                        x: branch[i].x,\r\n                        y: branch[i].y,\r\n                        radius: branch[i].radius\r\n                    }\r\n                    tree.setBranchStructure(branch[i].branchs, a_params)\r\n                }\r\n            }\r\n        }\r\n        tree.draw = function (branch) {\r\n            for (let i = 0; i < branch.length; i++) {\r\n                let points = branch[i].pointArr\r\n                for (let j = 0; j < points.length; j++) {\r\n                    that.canvas.save();\r\n                    that.canvas.beginPath();\r\n                    that.canvas.arc(points[j].x, points[j].y, points[j].radius, 0, 2 * Math.PI);\r\n                    that.canvas.globalAlpha = 0.3\r\n                    that.canvas.fillStyle = '#53261f'\r\n                    that.canvas.fill();\r\n                    that.canvas.restore();\r\n                }\r\n                if (branch[i].isEnd) {\r\n                    let d_pearch = new that.flower.pearch({\r\n                        x: points[points.length - 1].x,\r\n                        y: points[points.length - 1].y,\r\n                        radius: 6\r\n                    })\r\n                }\r\n                tree.draw(branch[i].branchs)\r\n            }\r\n        }\r\n        let t_params = {\r\n            x: tree.x,\r\n            y: tree.y,\r\n            radius: tree.radius\r\n        }\r\n        tree.setBranchStructure(tree.branchs, t_params)\r\n        tree.draw(tree.branchs)\r\n    }\r\n    //绘制花朵\r\n    initFlowerDraw() {\r\n        let that = this\r\n        //绘制桃花\r\n        that.flower.pearch = function (params) {\r\n            this.params = {\r\n                x: params.x,\r\n                y: params.y,\r\n                radius: params.radius,\r\n                petals: [],\r\n                feelers: []\r\n            }\r\n            this.setStructure = function () {\r\n                //五朵花瓣轨迹设置\r\n                for (let i = 0; i < 5; i++) {\r\n                    let petalPoint = []\r\n                    let angle = 72 * i\r\n                    let point1_angle = angle - 24\r\n                    let point1_radius = this.params.radius * 0.6\r\n                    let point1_q_angle = angle - 45\r\n                    let point1_q_radius = this.params.radius * 0.6\r\n                    petalPoint.push({\r\n                        point: {\r\n                            x: this.params.x + point1_radius * Math.cos(point1_angle * Math.PI / 180),\r\n                            y: this.params.y + point1_radius * Math.sin(point1_angle * Math.PI / 180)\r\n                        },\r\n                        qpoint: {\r\n                            x: this.params.x + point1_q_radius * Math.cos(point1_q_angle * Math.PI / 180),\r\n                            y: this.params.y + point1_q_radius * Math.sin(point1_q_angle * Math.PI / 180)\r\n                        }\r\n                    })\r\n                    let point2_angle = angle + 24\r\n                    let point2_radius = this.params.radius * 0.6\r\n                    let point2_q_angle = angle\r\n                    let point2_q_radius = this.params.radius\r\n                    petalPoint.push({\r\n                        point: {\r\n                            x: this.params.x + point2_radius * Math.cos(point2_angle * Math.PI / 180),\r\n                            y: this.params.y + point2_radius * Math.sin(point2_angle * Math.PI / 180)\r\n                        },\r\n                        qpoint: {\r\n                            x: this.params.x + point2_q_radius * Math.cos(point2_q_angle * Math.PI / 180),\r\n                            y: this.params.y + point2_q_radius * Math.sin(point2_q_angle * Math.PI / 180)\r\n                        }\r\n                    })\r\n                    let point3_q_angle = angle + 45\r\n                    let point3_q_radius = this.params.radius * 0.4\r\n                    petalPoint.push({\r\n                        point: {\r\n                            x: this.params.x,\r\n                            y: this.params.y\r\n                        },\r\n                        qpoint: {\r\n                            x: this.params.x + point3_q_radius * Math.cos(point3_q_angle * Math.PI / 180),\r\n                            y: this.params.y + point3_q_radius * Math.sin(point3_q_angle * Math.PI / 180)\r\n                        }\r\n                    })\r\n                    this.params.petals.push(petalPoint)\r\n                }\r\n                let feelersNum = that.incRandom(18, 22)\r\n                for (let i = 0; i < feelersNum; i++) {\r\n                    let angle = that.floatRandom(0, 1) * 360\r\n                    let l = this.params.radius * that.floatRandom(0.1, 0.4)\r\n                    let q_angle = angle - 10\r\n                    this.params.feelers.push({\r\n                        point: {\r\n                            x: this.params.x + l * Math.cos(angle * Math.PI / 180),\r\n                            y: this.params.y + l * Math.sin(angle * Math.Pl / 180)\r\n                        },\r\n                        qpoint: {\r\n                            x: this.params.x + l * 0.6 * Math.cos(q_angle * Math.PI / 180),\r\n                            y: this.params.y + l * 0.6 * Math.sin(q_angle * Math.PI / 180)\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n            this.draw = function () {\r\n                let grad = that.canvas.createRadialGradient(this.params.x, this.params.y, this.params.radius * 0.2,\r\n                    this.params.x, this.params.y, this.params.radius); //创建一个渐变色线性对象\r\n                grad.addColorStop(0, \"#f05b72\");\r\n                //定义渐变色颜色\r\n                grad.addColorStop(1, \"#feeeed\");\r\n                let s_grad = that.canvas.createRadialGradient(this.params.x, this.params.y, this.params.radius * 0.1,\r\n                    this.params.x, this.params.y, this.params.radius); //创建一个 渐变色线性对象\r\n                s_grad.addColorStop(0, \"rgba(255,131,250,0.26)\");\r\n                //定义渐变色颜色\r\n                s_grad.addColorStop(1, \"rgba(205,0,205,0.26)\");\r\n                for (let i = 0; i < this.params.petals.length; i++) {\r\n                    let c_petal = this.params.petals[i]\r\n                    that.canvas.save();\r\n                    that.canvas.beginPath();\r\n                    that.canvas.moveTo(this.params.x, this.params.y);\r\n                    for (let p = 0; p < c_petal.length; p++) {\r\n                        that.canvas.quadraticCurveTo(c_petal[p].qpoint.x, c_petal[p].qpoint.y, c_petal[p].point.x,\r\n                            c_petal[p].point.y)\r\n                    }\r\n                    that.canvas.fillStyle = grad\r\n                    that.canvas.strokeStyle = s_grad\r\n                    that.canvas.fill();\r\n                    //that.canvas.stroke();\r\n                    that.canvas.restore();\r\n                }\r\n                let grad2 = that.canvas.createRadialGradient(params.x, params.y, params.radius * 0.1, params.x,\r\n                    params.y, params.radius * 0.3); //创建一个渐变色线性对象\r\n                grad2.addColorStop(0, \"#8B008B\");\r\n                //定义渐变色颜色\r\n                grad2.addColorStop(1, \"#8B2252\");\r\n                for (let i = 0; i < this.params.feelers.length; i++) {\r\n                    that.canvas.save();\r\n                    that.canvas.beginPath();\r\n                    that.canvas.moveTo(this.params.feelers[i].point.x, this.params.feelers[i].point.y);\r\n                    that.canvas.quadraticCurveTo(this.params.feelers[i].qpoint.x,\r\n                        this.params.feelers[i].qpoint.y, this.params.x, this.params.y);\r\n                    that.canvas.strokeStyle = '#faa755'\r\n                    that.canvas.lineWidth = 0.2\r\n                    that.canvas.stroke();\r\n                    that.canvas.restore();\r\n                    that.canvas.save();\r\n                    that.canvas.beginPath();\r\n                    that.canvas.arc(this.params.feelers[i].point.x, this.params.feelers[i].point.y, 0.7, 0, 2 * Math.PI);\r\n                    that.canvas.fillStyle = '#905a3d'\r\n                    that.canvas.fill();\r\n                    that.canvas.restore();\r\n                }\r\n            }\r\n            this.setStructure()\r\n            this.draw()\r\n        }\r\n        //绘制邹菊\r\n        that.flower.daisy = function (params) {\r\n            this.params = {\r\n                x: params.x,\r\n                y: params.y,\r\n                radius: params.radius,\r\n                petals: [],\r\n                feelers: []\r\n            }\r\n            this.setDaisyStuct = function () {\r\n                let petalMum = that.incRandom(18, 22)\r\n                let avg_angle = 360 / petalMum\r\n\r\n                for (let i = 0; i < petalMum; i++) {\r\n                    let point = {}\r\n                    let angle = avg_angle * i\r\n                    point.start = {\r\n                        x: this.params.x + this.params.radius * 0.2 * Math.cos(angle * Math.PI / 180),\r\n                        y: this.params.y + this.params.radius * 0.2 * Math.sin(angle * Math.PI / 180)\r\n                    }\r\n                    point.left_q = {\r\n                        x: point.start.x + this.params.radius * that.floatRandom(0.6, 0.8) * Math.cos((angle - that.floatRandom(8, 10)) * Math.PI / 180),\r\n                        y: point.start.y + this.params.radius * that.floatRandom(0.6, 0.8) * Math.sin((angle - that.floatRandom(8, 10)) * Math.PI / 180)\r\n                    }\r\n                    point.top = {\r\n                        x: point.start.x + this.params.radius * that.floatRandom(0.7, 0.8) * Math.cos(angle * Math.PI / 180),\r\n                        y: point.start.y + this.params.radius * that.floatRandom(0.7, 0.8) * Math.sin(angle * Math.PI / 180)\r\n                    }\r\n                    point.right_q = {\r\n                        x: point.start.x + this.params.radius * that.floatRandom(0.6, 0.8) * Math.cos((angle + that.floatRandom(8, 10)) * Math.PI / 180),\r\n                        y: point.start.y + this.params.radius * that.floatRandom(0.6, 0.8) * Math.sin((angle + that.floatRandom(8, 10)) * Math.PI / 180)\r\n                    }\r\n                    point.end = {\r\n                        X: point.start.X,\r\n                        y: point.start.y\r\n                    }\r\n                    this.params.petals.push(point)\r\n                }\r\n                let feelerMum = that.incRandom(48, 52)\r\n                for (let i = 0; i < feelerMum; i++) {\r\n                    let angle = 360 * Math.random()\r\n                    let radius = this.params.radius * that.floatRandom(0.01, 0.22)\r\n                    let point = {\r\n                        x: this.params.x + radius * Math.cos(angle * Math.PI / 180),\r\n                        y: this.params.y + radius * Math.sin(angle * Math.PI / 180),\r\n                        radius: this.params.radius * that.floatRandom(0.02, 0.03)\r\n                    }\r\n                    this.params.feelers.push(point)\r\n                }\r\n            }\r\n            this.draw = function () {\r\n                let grad = that.canvas.createRadialGradient(this.params.x, this.params.y, this.params.radius * 0.3,\r\n                    this.params.x, this.params.y, this.params.radius); //创建一个 渐变色线性对象\r\n\r\n                grad.addColorStop(0, \"#FF1493\");\r\n                //定义渐变色颜色\r\n                grad.addColorStop(1, \"#FF69B4\");\r\n                for (let i = 0; i < this.params.petals.length; i++) {\r\n                    let c_petal = this.params.petals[i]\r\n                    that.canvas.save();\r\n                    that.canvas.beginPath();\r\n                    that.canvas.moveTo(c_petal.start.x, c_petal.start.y);\r\n                    that.canvas.quadraticCurveTo(c_petal.left_q.x, c_petal.left_q.y, c_petal.top.x, c_petal.top.y)\r\n                    that.canvas.quadraticCurveTo(c_petal.right_q.x, c_petal.right_q.y, c_petal.end.x, c_petal.end.y)\r\n                    that.canvas.fillStyle = grad\r\n                    that.canvas.strokeStyle = 'rgba(176,48,96,0.6)'\r\n                    that.canvas.fill();\r\n                    that.canvas.stroke();\r\n                    that.canvas.restore();\r\n                }\r\n                let c_grad = that.canvas.createRadialGradient(this.params.x, this.params.y, this.params.radius * 0,\r\n                    this.params.x, this.params.y,\r\n                    this.params.radius * 0.25); //创建一个 渐变色线性对象\r\n                c_grad.addColorStop(0, \"#fcaf17\");\r\n                //定义渐变色颜色\r\n                c_grad.addColorStop(1, \"#c88400\");\r\n                that.canvas.save();\r\n                that.canvas.beginPath();\r\n                that.canvas.fillStyle = c_grad\r\n                that.canvas.arc(this.params.x, this.params.y, 0.25 * this.params.radius, 0, 2 * Math.PI);\r\n                that.canvas.fill();\r\n                that.canvas.restore();\r\n                for (let i = 0; i < this.params.feelers.length; i++) {\r\n                    let grad2 = that.canvas.createRadialGradient(this.params.feelers[i].x, this.params.feelers[i].y, 0,\r\n                        this.params.feelers[i].x, this.params.feelers[i].y, this.params.feelers[i].radius); //创建一个 渐变色线性对象\r\n                    grad2.addColorStop(0, \"#B8860B\");\r\n                    //定义渐变色颜色\r\n                    grad2.addColorStop(1, \"#FFA500\");\r\n                    that.canvas.save();\r\n                    that.canvas.beginPath();\r\n                    that.canvas.fillStyle = grad2\r\n                    that.canvas.arc(this.params.feelers[i].x, this.params.feelers[i].y, this.params.feelers[i].radius, 0, 2 * Math.PI);\r\n                    that.canvas.fill();\r\n                    //that.canvas.stroke();\r\n                    that.canvas.restore();\r\n                }\r\n            }\r\n            this.setDaisyStuct()\r\n            this.draw()\r\n        }\r\n    }\r\n    //草\r\n    initGlass() {\r\n        let that = this\r\n        that.grass.daisy = function (params) {\r\n            this.params = {\r\n                x: params.x,\r\n                y: params.y,\r\n                height: params.height,\r\n                radius: params.radius,\r\n                trunk: [],\r\n                leafs: []\r\n            }\r\n            this.setDaisyStruct = function () {\r\n                let start = {\r\n                    x: this.params.x,\r\n                    y: this.params.y\r\n                }\r\n                for (let i = 0; i < this.params.height; i++) {\r\n                    start.x += that.floatRandom(-0.3, 0.3)\r\n                    start.y -= 1\r\n                    this.params.radius *= 0.998\r\n                    let p = {\r\n                        x: start.x,\r\n                        y: start.y,\r\n                        radius: this.params.radius\r\n                    }\r\n\r\n                    this.params.trunk.push(p)\r\n                }\r\n                let init_num = Math.round(this.params.height / 24)\r\n                let leafNum = that.incRandom(init_num, 1)\r\n                let gap = this.params.height / leafNum\r\n                for (let i = 1; i < leafNum; i++) {\r\n                    let s_point = {\r\n                        x: this.params.x,\r\n                        y: this.params.y - (gap * i + (gap / 4) * that.floatRandom(-1, 1))\r\n                    }\r\n                    let angle = that.floatRandom(150, 190)\r\n                    if (i % 2 == 0) {\r\n                        angle = that.floatRandom(-10, 30)\r\n                    }\r\n                    let init_len = Math.round(this.params.height / 4)\r\n                    let len = that.incRandom(init_len, init_len / 2)\r\n                    let e_point = {\r\n                        x: s_point.x + len * Math.cos(angle * Math.PI / 180),\r\n                        y: s_point.y + len * Math.sin(angle * Math.PI / 180)\r\n                    }\r\n                    let left_q = {\r\n                        x: s_point.x + len * that.floatRandom(0.9, 1) * Math.cos((angle - 10) * Math.PI / 180),\r\n                        y: s_point.y + len * that.floatRandom(0.9, 1) * Math.sin((angle - 10) * Math.PI / 180)\r\n                    }\r\n                    let right_q = {\r\n                        x: s_point.x + len * that.floatRandom(0.9, 1) * Math.cos((angle + 10) * Math.PI / 180),\r\n                        y: s_point.y + len * that.floatRandom(0.9, 1) * Math.sin((angle + 10) * Math.PI / 180)\r\n                    }\r\n                    this.params.leafs.push({\r\n                        start: s_point,\r\n                        left_q: left_q,\r\n                        end: e_point,\r\n                        right_q: right_q,\r\n                    })\r\n                }\r\n            }\r\n            this.draw = function () {\r\n                for (let i = 0; i < this.params.trunk.length; i++) {\r\n                    that.canvas.save();\r\n                    that.canvas.beginPath();\r\n                    that.canvas.fillStyle = 'rgba(139,119,101,0.7)'\r\n                    that.canvas.arc(this.params.trunk[i].x, this.params.trunk[i].y, this.params.trunk[i].radius, 0, 2 * Math.PI);\r\n                    that.canvas.fill();\r\n                    that.canvas.restore();\r\n                }\r\n                for (let i = 0; i < this.params.leafs.length; i++) {\r\n                    let leaf = this.params.leafs[i]\r\n                    that.canvas.save();\r\n                    that.canvas.beginPath();\r\n                    that.canvas.fillStyle = '#556B2F'\r\n                    that.canvas.moveTo(leaf.start.x, leaf.start.y)\r\n                    that.canvas.quadraticCurveTo(leaf.left_q.x, leaf.left_q.y, leaf.end.x, leaf.end.y)\r\n                    that.canvas.quadraticCurveTo(leaf.right_q.x, leaf.right_q.y, leaf.start.x, leaf.start.y)\r\n                    that.canvas.fill();\r\n                    that.canvas.restore();\r\n                }\r\n                new that.flower.daisy({\r\n                    x: this.params.trunk[this.params.trunk.length - 1].x,\r\n                    y: this.params.trunk[this.params.trunk.length - 1].y,\r\n                    radius: this.params.height / 6\r\n                })\r\n            }\r\n            this.setDaisyStruct()\r\n            this.draw()\r\n        }\r\n        that.grass.weed = function (params) {\r\n            let angle = that.floatRandom(250, 290)\r\n            let len = that.floatRandom(20, 50)\r\n            let end = {\r\n                x: params.x + len * Math.cos(angle *\r\n                    Math.PI / 180),\r\n                y: params.y + len * Math.sin(angle *\r\n                    Math.PI / 180)\r\n            }\r\n            let left_q = {\r\n                x: params.x + len * 0.5 * Math.cos((angle - 10) * Math.PI / 180),\r\n                y: params.y + len * 0.5 * Math.sin((angle - 10) * Math.PI / 180)\r\n            }\r\n            let right_q = {\r\n                x: params.x + len * 0.5 * Math.cos((angle + 10) * Math.PI / 180),\r\n                y: params.y + len * 0.5 * Math.sin((angle + 10) * Math.PI / 180)\r\n            }\r\n            that.canvas.save();\r\n            that.canvas.beginPath();\r\n            that.canvas.fillStyle = '#556B2F'\r\n            that.canvas.moveTo(params.x - 2, params.y)\r\n            that.canvas.quadraticCurveTo(left_q.x, left_q.y, end.x, end.y)\r\n            that.canvas.quadraticCurveTo(right_q.x, right_q.y, params.x + 2, params.y)\r\n            that.canvas.fill();\r\n            that.canvas.restore();\r\n        }\r\n    }\r\n}\r\nconst getAngle = ({ x: x1, y: y1 }, { x: x2, y: y2 })=> {\r\n    const dot = x1 * x2 + y1 * y2\r\n    const det = x1 * y2 - y1 * x2\r\n    const angle = Math.atan2(det, dot) / Math.PI* 180\r\n    return (angle + 360) % 360\r\n}\r\nexport default Landscape\n\n\n// WEBPACK FOOTER //\n// ./src/landscape.js","<template>\n  <div class=\"\">\n    <canvas id=\"canvas\"></canvas>\n  </div>\n</template>\n<script>\n  import Landscape from './landscape.js'\n  export default {\n    name: 'App',\n    data(){\n      return {}\n    },\n    mounted(){\n     let el = document.getElementById('canvas')\n     let w= window.innerWidth || document.body.clientWidth;\n     let h= window.innerHeight || document.body.clientHeight;\n     this.Landscape = new Landscape({\n       el: el,\n       background: 'rgba(255,255,255)',\n       width: w,\n        height: h\n     })\n    }\n  }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/landscape.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{},[_c('canvas',{attrs:{\"id\":\"canvas\"}})])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-b5b98f24\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/landscape.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./landscape.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./landscape.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-b5b98f24\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./landscape.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/landscape.vue\n// module id = null\n// module chunks = ","import Vue from 'vue'\nimport Router from 'vue-router'\nimport landscape from '@/landscape.vue'\n\nVue.use(Router)\n\nexport default new Router({\n  routes: [\n    {\n      path: '/',\n      name: 'landscape',\n      component: landscape\n    }\n  ]\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/route.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport App from './App'\nimport router from './route'\n\nVue.config.productionTip = false\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  router,\n  components: { App },\n  template: '<App/>'\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}