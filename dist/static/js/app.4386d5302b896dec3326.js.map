{"version":3,"sources":["webpack:///./src/App.vue?b269","webpack:///./src/App.vue","webpack:///src/App.vue","webpack:///./src/landscape.js","webpack:///src/landscape.vue","webpack:///./src/landscape.vue?8aae","webpack:///./src/landscape.vue","webpack:///./src/route.js","webpack:///./src/main.js"],"names":["selectortype_template_index_0_src_App","render","_h","this","$createElement","_c","_self","attrs","id","staticRenderFns","src_App","__webpack_require__","normalizeComponent","name","ssrContext","Landscape","_ref","el","background","width","height","classCallCheck_default","ele","style","backgroundColor","canvas","getContext","elements","flower","grass","init","initFlowerDraw","initGlass","initBackdrop","b_grad","createLinearGradient","addColorStop","save","beginPath","fillStyle","fillRect","restore","tree","x","y","radius","daisyNum","incRandom","i","daisy","floatRandom","weed","image","_this","img","Image","src","onload","moon","moveTo","quadraticCurveTo","fill","s","e","Math","round","random","min","max","param","branchs","grap","getBranchIncRandom","getBranchFloatRandom","setBranchStructure","branch","params","length","pieces","push","pointArr","inc","circulation","j","isEnd","p","reg","angle","cos","sin","a_params","that","draw","points","arc","PI","globalAlpha","pearch","t_params","petals","feelers","setStructure","petalPoint","point1_angle","point1_radius","point1_q_angle","point1_q_radius","point","qpoint","point2_angle","point2_radius","point2_q_angle","point2_q_radius","point3_q_angle","point3_q_radius","feelersNum","l","q_angle","Pl","grad","createRadialGradient","s_grad","c_petal","strokeStyle","grad2","lineWidth","stroke","setDaisyStuct","petalMum","avg_angle","start","left_q","top","right_q","end","X","feelerMum","c_grad","trunk","leafs","setDaisyStruct","init_num","leafNum","gap","s_point","init_len","len","e_point","leaf","selectortype_script_index_0_src_landscape","data","mounted","document","getElementById","w","window","innerWidth","body","clientWidth","h","innerHeight","clientHeight","landscape","selectortype_template_index_0_src_landscape","_m","src_landscape","landscape_normalizeComponent","Vue","use","Router","route","routes","path","component","config","productionTip","router","components","App","template"],"mappings":"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","file":"static/js/app.4386d5302b896dec3326.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-a62adf06\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a62adf06\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a62adf06\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","<template>\n  <div id=\"app\">\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App'\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  padding:0;\n  margin: 0;\n}\n*{\n  padding:0;\n  margin:0;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","class Landscape {\r\n    constructor({\r\n        el,\r\n        background,\r\n        width,\r\n        height\r\n    }) {\r\n        this.ele = el\r\n        this.ele.width = width;\r\n        this.ele.height = height;\r\n        this.ele.style.backgroundColor = background;\r\n        //this.ele. style.backgroundlmage ='url(timgjpg);\r\n        this.canvas = el.getContext(\"2d\")\r\n        this.elements = []\r\n        this.flower = {}\r\n        this.grass = {}\r\n        this.init()\r\n    }\r\n    init() {\r\n        this.initFlowerDraw()\r\n        this.initGlass()\r\n        this.initBackdrop()\r\n    }\r\n    initBackdrop() {\r\n        let b_grad = this.canvas.createLinearGradient(0, 0, 0, this.ele.height); //创建一个 渐变色线性对象\r\n        b_grad.addColorStop(0, \"#2a5caa\");\r\n        //定义渐变色颜色\r\n        b_grad.addColorStop(1, \"#afb4db\");\r\n        this.canvas.save();\r\n        this.canvas.beginPath();\r\n        this.canvas.fillStyle = b_grad\r\n        this.canvas.fillRect(0, 0, this.ele.width, this.ele.height);\r\n        this.canvas.restore();\r\n        this.tree({\r\n            x: this.ele.width / 2,\r\n            y: this.ele.height - 10,\r\n            radius: 15\r\n        })\r\n        let daisyNum = this.incRandom(10, 5)\r\n        for (let i = 0; i < daisyNum; i++) {\r\n            let height = this.incRandom(80, 50)\r\n            new this.grass.daisy({\r\n                x: this.ele.width * this.floatRandom(0, 1),\r\n                y: this.ele.height,\r\n                height: height,\r\n                radius: height / 50\r\n            })\r\n        }\r\n        for (let i = 0; i < this.ele.width; i++) {\r\n            new this.grass.weed({\r\n                x: i,\r\n                y: this.ele.height,\r\n            })\r\n        }\r\n    }\r\n    setBglmage(image) {\r\n        let img = new Image();\r\n        img.src = image\r\n        img.onload = () => {\r\n            //this.canvas.drawlmage(img, 0, 0,this.ele.width, this.ele.height);\r\n            this.initFlowerDraw()\r\n            this.tree({\r\n                x: this.ele.width / 2,\r\n                y: this.ele.height - 100,\r\n                radius: 15\r\n            })\r\n            this.initGlass()\r\n            this.moon()\r\n            new this.grass.weed({\r\n                x: 100,\r\n                y: 800,\r\n            })\r\n            new this.grass.daisy({\r\n                x: 300,\r\n                y: this.ele.height,\r\n                radius: 2.5,\r\n                height: 200\r\n            })\r\n        }\r\n    }\r\n    moon() {\r\n        this.canvas.save();\r\n        this.canvas.beginPath();\r\n        this.canvas.moveTo(200, 200)\r\n        this.canvas.quadraticCurveTo(265, 250, 180, 300);\r\n        this.canvas.quadraticCurveTo(245, 235, 200, 200);\r\n        this.canvas.fillStyle = 'rgba(255,255,0,0.8)'\r\n        this.canvas.fill();\r\n        this.canvas.restore();\r\n    }\r\n    //随机整数\r\n    incRandom(s, e) {\r\n        return Math.round(s + e * Math.random())\r\n    }\r\n    //随机浮点数\r\n    floatRandom(min, max) {\r\n        return (min + (max - min) * Math.random())\r\n    }\r\n    //树\r\n    tree(param) {\r\n        //this.canvas.globalCompositeOperation =\"source-over\";\r\n        let tree = {\r\n            branchs: [],\r\n            x: param.x,\r\n            y: param.y,\r\n            radius: param.radius,\r\n            grap: 1\r\n        }\r\n        //随机整数\r\n        tree.getBranchIncRandom = this.incRandom\r\n        //随机浮点数\r\n        tree.getBranchFloatRandom = this.floatRandom\r\n        //创建数据结构\r\n        tree.setBranchStructure = function (branch, params) {\r\n            tree.grap++\r\n            if (!branch.length) {\r\n                let pieces = tree.getBranchIncRandom(2, 2)\r\n                for (let i = 0; i < pieces; i++) {\r\n                    branch.push({\r\n                        radius: params.radius,\r\n                        pointArr: [],\r\n                        x: params.x,\r\n                        y: params.y,\r\n                        inc: {\r\n                            x: tree.getBranchFloatRandom(-1.5, 1.5),\r\n                            y: tree.getBranchFloatRandom(3.5, 5),\r\n                        },\r\n                        branchs: []\r\n                    })\r\n                }\r\n            }\r\n            for (let i = 0; i < branch.length; i++) {\r\n\r\n                let circulation = tree.getBranchIncRandom(50, 20)\r\n                for (let j = 0; j < circulation; j++) {\r\n                    if (branch[i].radius < 0.8) {\r\n                        branch[i].isEnd = true\r\n                        break\r\n                    }\r\n                    branch[i].radius *= 0.99\r\n                    branch[i].x += branch[i].inc.x\r\n                    branch[i].y -= branch[i].inc.y\r\n\t                let p = {\r\n                        x: branch[i].x,\r\n                        y: branch[i].y,\r\n                        radius: branch[i].radius\r\n                    }\r\n                    let reg = 0.18 - (0.1 / tree.grap);\r\n                    let angle = tree.getBranchFloatRandom(-reg, reg)\r\n                    branch[i].inc.x = Math.cos(angle) * branch[i].inc.x - Math.sin(angle) * branch[i].inc.y;\r\n                    branch[i].inc.y = Math.sin(angle) * branch[i].inc.x + Math.cos(angle) * branch[i].inc.y;\r\n                    branch[i].pointArr.push(p)\r\n                }\r\n                if (branch[i].radius > 0.8) {\r\n                    branch[i].branchs = []\r\n                    let pieces = tree.getBranchIncRandom(1, 2)\r\n                    for (let j = 0; j < pieces; j++) {\r\n                        branch[i].branchs.push({\r\n                            radius: branch[i].radius,\r\n                            pointArr: [],\r\n                            x: branch[i].x,\r\n                            y: branch[i].y,\r\n                            inc: {\r\n                                x: branch[i].inc.x,\r\n                                y: branch[i].inc.y\r\n                            },\r\n                            branchs: []\r\n                        })\r\n                    }\r\n                    let a_params = {\r\n                        x: branch[i].x,\r\n                        y: branch[i].y,\r\n                        radius: branch[i].radius\r\n                    }\r\n                    tree.setBranchStructure(branch[i].branchs, a_params)\r\n                }\r\n            }\r\n        }\r\n        let that = this\r\n        tree.draw = function (branch) {\r\n            for (let i = 0; i < branch.length; i++) {\r\n                let points = branch[i].pointArr\r\n                for (let j = 0; j < points.length; j++) {\r\n                    that.canvas.save();\r\n                    that.canvas.beginPath();\r\n                    that.canvas.arc(points[j].x, points[j].y, points[j].radius, 0, 2 * Math.PI);\r\n                    //this.canvas.rotate(tree.pointArr[i].rotate)\r\n                    that.canvas.globalAlpha = 0.3\r\n                    that.canvas.fillStyle = '#53261f'\r\n                    that.canvas.fill();\r\n                    that.canvas.restore();\r\n                }\r\n                if (branch[i].isEnd) {\r\n                    // that.flower({\r\n                    // x: points[points.length- 1].x,\r\n                    // y: points[points.length- 1].y, \r\n                    // radius: 5\r\n                    // })\r\n                    let d_pearch = new that.flower.pearch({\r\n                        x: points[points.length - 1].x,\r\n                        y: points[points.length - 1].y,\r\n                        radius: 6\r\n                    })\r\n                }\r\n                tree.draw(branch[i].branchs)\r\n            }\r\n        }\r\n        let t_params = {\r\n            x: tree.x,\r\n            y: tree.y,\r\n            radius: tree.radius\r\n        }\r\n        tree.setBranchStructure(tree.branchs, t_params)\r\n        tree.draw(tree.branchs)\r\n    }\r\n    initFlowerDraw() {\r\n        let that = this\r\n        that.flower.pearch = function (params) {\r\n            this.params = {\r\n                x: params.x,\r\n                y: params.y,\r\n                radius: params.radius,\r\n                petals: [],\r\n                feelers: []\r\n            }\r\n            this.setStructure = function () {\r\n                //五朵花瓣轨迹设置\r\n                for (let i = 0; i < 5; i++) {\r\n                    let petalPoint = []\r\n                    let angle = 72 * i\r\n                    let point1_angle = angle - 24\r\n                    let point1_radius = this.params.radius * 0.6\r\n                    let point1_q_angle = angle - 45\r\n                    let point1_q_radius = this.params.radius * 0.6\r\n                    petalPoint.push({\r\n                        point: {\r\n                            x: this.params.x + point1_radius * Math.cos(point1_angle * Math.PI / 180),\r\n                            y: this.params.y + point1_radius * Math.sin(point1_angle * Math.PI / 180)\r\n                        },\r\n                        qpoint: {\r\n                            x: this.params.x + point1_q_radius * Math.cos(point1_q_angle * Math.PI / 180),\r\n                            y: this.params.y + point1_q_radius * Math.sin(point1_q_angle * Math.PI / 180)\r\n                        }\r\n                    })\r\n                    let point2_angle = angle + 24\r\n                    let point2_radius = this.params.radius * 0.6\r\n                    let point2_q_angle = angle\r\n                    let point2_q_radius = this.params.radius\r\n                    petalPoint.push({\r\n                        point: {\r\n                            x: this.params.x + point2_radius * Math.cos(point2_angle * Math.PI / 180),\r\n                            y: this.params.y + point2_radius * Math.sin(point2_angle * Math.PI / 180)\r\n                        },\r\n                        qpoint: {\r\n                            x: this.params.x + point2_q_radius * Math.cos(point2_q_angle * Math.PI / 180),\r\n                            y: this.params.y + point2_q_radius * Math.sin(point2_q_angle * Math.PI / 180)\r\n                        }\r\n                    })\r\n                    let point3_q_angle = angle + 45\r\n                    let point3_q_radius = this.params.radius * 0.4\r\n                    petalPoint.push({\r\n                        point: {\r\n                            x: this.params.x,\r\n                            y: this.params.y\r\n                        },\r\n                        qpoint: {\r\n                            x: this.params.x + point3_q_radius * Math.cos(point3_q_angle * Math.PI / 180),\r\n                            y: this.params.y + point3_q_radius * Math.sin(point3_q_angle * Math.PI / 180)\r\n                        }\r\n                    })\r\n                    this.params.petals.push(petalPoint)\r\n                }\r\n                let feelersNum = that.incRandom(18, 22)\r\n                for (let i = 0; i < feelersNum; i++) {\r\n                    let angle = that.floatRandom(0, 1) * 360\r\n                    let l = this.params.radius * that.floatRandom(0.1, 0.4)\r\n                    let q_angle = angle - 10\r\n                    this.params.feelers.push({\r\n                        point: {\r\n                            x: this.params.x + l * Math.cos(angle * Math.PI / 180),\r\n                            y: this.params.y + l * Math.sin(angle * Math.Pl / 180)\r\n                        },\r\n                        qpoint: {\r\n                            x: this.params.x + l * 0.6 * Math.cos(q_angle * Math.PI / 180),\r\n                            y: this.params.y + l * 0.6 * Math.sin(q_angle * Math.PI / 180)\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n            this.draw = function () {\r\n                let grad = that.canvas.createRadialGradient(this.params.x, this.params.y, this.params.radius * 0.2,\r\n                    this.params.x, this.params.y, this.params.radius); //创建一个渐变色线性对象\r\n                grad.addColorStop(0, \"#f05b72\");\r\n                //定义渐变色颜色\r\n                grad.addColorStop(1, \"#feeeed\");\r\n                let s_grad = that.canvas.createRadialGradient(this.params.x, this.params.y, this.params.radius * 0.1,\r\n                    this.params.x, this.params.y, this.params.radius); //创建一个 渐变色线性对象\r\n                s_grad.addColorStop(0, \"rgba(255,131,250,0.26)\");\r\n                //定义渐变色颜色\r\n                s_grad.addColorStop(1, \"rgba(205,0,205,0.26)\");\r\n                for (let i = 0; i < this.params.petals.length; i++) {\r\n                    let c_petal = this.params.petals[i]\r\n                    that.canvas.save();\r\n                    that.canvas.beginPath();\r\n                    that.canvas.moveTo(this.params.x, this.params.y);\r\n                    for (let p = 0; p < c_petal.length; p++) {\r\n                        that.canvas.quadraticCurveTo(c_petal[p].qpoint.x, c_petal[p].qpoint.y, c_petal[p].point.x,\r\n                            c_petal[p].point.y)\r\n                    }\r\n                    that.canvas.fillStyle = grad\r\n                    that.canvas.strokeStyle = s_grad\r\n                    that.canvas.fill();\r\n                    //that.canvas.stroke();\r\n                    that.canvas.restore();\r\n                }\r\n                let grad2 = that.canvas.createRadialGradient(params.x, params.y, params.radius * 0.1, params.x,\r\n                    params.y, params.radius * 0.3); //创建一个渐变色线性对象\r\n                grad2.addColorStop(0, \"#8B008B\");\r\n                //定义渐变色颜色\r\n                grad2.addColorStop(1, \"#8B2252\");\r\n                for (let i = 0; i < this.params.feelers.length; i++) {\r\n                    that.canvas.save();\r\n                    that.canvas.beginPath();\r\n                    that.canvas.moveTo(this.params.feelers[i].point.x, this.params.feelers[i].point.y);\r\n                    that.canvas.quadraticCurveTo(this.params.feelers[i].qpoint.x,\r\n                        this.params.feelers[i].qpoint.y, this.params.x, this.params.y);\r\n                    that.canvas.strokeStyle = '#faa755'\r\n                    that.canvas.lineWidth = 0.2\r\n                    that.canvas.stroke();\r\n                    that.canvas.restore();\r\n                    that.canvas.save();\r\n                    that.canvas.beginPath();\r\n                    that.canvas.arc(this.params.feelers[i].point.x, this.params.feelers[i].point.y, 0.7, 0, 2 * Math.PI);\r\n                    that.canvas.fillStyle = '#905a3d'\r\n                    that.canvas.fill();\r\n                    that.canvas.restore();\r\n                }\r\n            }\r\n            this.setStructure()\r\n            this.draw()\r\n        }\r\n        that.flower.daisy = function (params) {\r\n            this.params = {\r\n                x: params.x,\r\n                y: params.y,\r\n                radius: params.radius,\r\n                petals: [],\r\n                feelers: []\r\n            }\r\n            this.setDaisyStuct = function () {\r\n                let petalMum = that.incRandom(18, 22)\r\n                let avg_angle = 360 / petalMum\r\n\r\n                for (let i = 0; i < petalMum; i++) {\r\n                    let point = {}\r\n                    let angle = avg_angle * i\r\n                    point.start = {\r\n                        x: this.params.x + this.params.radius * 0.2 * Math.cos(angle * Math.PI / 180),\r\n                        y: this.params.y + this.params.radius * 0.2 * Math.sin(angle * Math.PI / 180)\r\n                    }\r\n                    point.left_q = {\r\n                        x: point.start.x + this.params.radius * that.floatRandom(0.6, 0.8) * Math.cos((angle - that.floatRandom(8, 10)) * Math.PI / 180),\r\n                        y: point.start.y + this.params.radius * that.floatRandom(0.6, 0.8) * Math.sin((angle - that.floatRandom(8, 10)) * Math.PI / 180)\r\n                    }\r\n                    point.top = {\r\n                        x: point.start.x + this.params.radius * that.floatRandom(0.7, 0.8) * Math.cos(angle * Math.PI / 180),\r\n                        y: point.start.y + this.params.radius * that.floatRandom(0.7, 0.8) * Math.sin(angle * Math.PI / 180)\r\n                    }\r\n                    point.right_q = {\r\n                        x: point.start.x + this.params.radius * that.floatRandom(0.6, 0.8) * Math.cos((angle + that.floatRandom(8, 10)) * Math.PI / 180),\r\n                        y: point.start.y + this.params.radius * that.floatRandom(0.6, 0.8) * Math.sin((angle + that.floatRandom(8, 10)) * Math.PI / 180)\r\n                    }\r\n                    point.end = {\r\n                        X: point.start.X,\r\n                        y: point.start.y\r\n                    }\r\n                    this.params.petals.push(point)\r\n                }\r\n                let feelerMum = that.incRandom(48, 52)\r\n                for (let i = 0; i < feelerMum; i++) {\r\n                    let angle = 360 * Math.random()\r\n                    let radius = this.params.radius * that.floatRandom(0.01, 0.22)\r\n                    let point = {\r\n                        x: this.params.x + radius * Math.cos(angle * Math.PI / 180),\r\n                        y: this.params.y + radius * Math.sin(angle * Math.PI / 180),\r\n                        radius: this.params.radius * that.floatRandom(0.02, 0.03)\r\n                    }\r\n                    this.params.feelers.push(point)\r\n                }\r\n            }\r\n            this.draw = function () {\r\n                let grad = that.canvas.createRadialGradient(this.params.x, this.params.y, this.params.radius * 0.3,\r\n                    this.params.x, this.params.y, this.params.radius); //创建一个 渐变色线性对象\r\n\r\n                grad.addColorStop(0, \"#FF1493\");\r\n                //定义渐变色颜色\r\n                grad.addColorStop(1, \"#FF69B4\");\r\n                for (let i = 0; i < this.params.petals.length; i++) {\r\n                    let c_petal = this.params.petals[i]\r\n                    that.canvas.save();\r\n                    that.canvas.beginPath();\r\n                    that.canvas.moveTo(c_petal.start.x, c_petal.start.y);\r\n                    that.canvas.quadraticCurveTo(c_petal.left_q.x, c_petal.left_q.y, c_petal.top.x, c_petal.top.y)\r\n                    that.canvas.quadraticCurveTo(c_petal.right_q.x, c_petal.right_q.y, c_petal.end.x, c_petal.end.y)\r\n                    that.canvas.fillStyle = grad\r\n                    that.canvas.strokeStyle = 'rgba(176,48,96,0.6)'\r\n                    that.canvas.fill();\r\n                    that.canvas.stroke();\r\n                    that.canvas.restore();\r\n                }\r\n                let c_grad = that.canvas.createRadialGradient(this.params.x, this.params.y, this.params.radius * 0,\r\n                    this.params.x, this.params.y,\r\n                    this.params.radius * 0.25); //创建一个 渐变色线性对象\r\n                c_grad.addColorStop(0, \"#fcaf17\");\r\n                //定义渐变色颜色\r\n                c_grad.addColorStop(1, \"#c88400\");\r\n                that.canvas.save();\r\n                that.canvas.beginPath();\r\n                that.canvas.fillStyle = c_grad\r\n                that.canvas.arc(this.params.x, this.params.y, 0.25 * this.params.radius, 0, 2 * Math.PI);\r\n                that.canvas.fill();\r\n                that.canvas.restore();\r\n                for (let i = 0; i < this.params.feelers.length; i++) {\r\n                    let grad2 = that.canvas.createRadialGradient(this.params.feelers[i].x, this.params.feelers[i].y, 0,\r\n                        this.params.feelers[i].x, this.params.feelers[i].y, this.params.feelers[i].radius); //创建一个 渐变色线性对象\r\n                    grad2.addColorStop(0, \"#B8860B\");\r\n                    //定义渐变色颜色\r\n                    grad2.addColorStop(1, \"#FFA500\");\r\n                    that.canvas.save();\r\n                    that.canvas.beginPath();\r\n                    that.canvas.fillStyle = grad2\r\n                    that.canvas.arc(this.params.feelers[i].x, this.params.feelers[i].y, this.params.feelers[i].radius, 0, 2 * Math.PI);\r\n                    that.canvas.fill();\r\n                    //that.canvas.stroke();\r\n                    that.canvas.restore();\r\n                }\r\n            }\r\n            this.setDaisyStuct()\r\n            this.draw()\r\n        }\r\n    }\r\n    //草\r\n    initGlass() {\r\n        let that = this\r\n        that.grass.daisy = function (params) {\r\n            this.params = {\r\n                x: params.x,\r\n                y: params.y,\r\n                height: params.height,\r\n                radius: params.radius,\r\n                trunk: [],\r\n                leafs: []\r\n            }\r\n            this.setDaisyStruct = function () {\r\n                let start = {\r\n                    x: this.params.x,\r\n                    y: this.params.y\r\n                }\r\n                for (let i = 0; i < this.params.height; i++) {\r\n                    start.x += that.floatRandom(-0.3, 0.3)\r\n                    start.y -= 1\r\n                    this.params.radius *= 0.998\r\n                    let p = {\r\n                        x: start.x,\r\n                        y: start.y,\r\n                        radius: this.params.radius\r\n                    }\r\n\r\n                    this.params.trunk.push(p)\r\n                }\r\n                let init_num = Math.round(this.params.height / 24)\r\n                let leafNum = that.incRandom(init_num, 1)\r\n                let gap = this.params.height / leafNum\r\n                for (let i = 1; i < leafNum; i++) {\r\n                    let s_point = {\r\n                        x: this.params.x,\r\n                        y: this.params.y - (gap * i + (gap / 4) * that.floatRandom(-1, 1))\r\n                    }\r\n                    let angle = that.floatRandom(150, 190)\r\n                    if (i % 2 == 0) {\r\n                        angle = that.floatRandom(-10, 30)\r\n                    }\r\n                    let init_len = Math.round(this.params.height / 4)\r\n                    let len = that.incRandom(init_len, init_len / 2)\r\n                    let e_point = {\r\n                        x: s_point.x + len * Math.cos(angle * Math.PI / 180),\r\n                        y: s_point.y + len * Math.sin(angle * Math.PI / 180)\r\n                    }\r\n                    let left_q = {\r\n                        x: s_point.x + len * that.floatRandom(0.9, 1) * Math.cos((angle - 10) * Math.PI / 180),\r\n                        y: s_point.y + len * that.floatRandom(0.9, 1) * Math.sin((angle - 10) * Math.PI / 180)\r\n                    }\r\n                    let right_q = {\r\n                        x: s_point.x + len * that.floatRandom(0.9, 1) * Math.cos((angle + 10) * Math.PI / 180),\r\n                        y: s_point.y + len * that.floatRandom(0.9, 1) * Math.sin((angle + 10) * Math.PI / 180)\r\n                    }\r\n                    this.params.leafs.push({\r\n                        start: s_point,\r\n                        left_q: left_q,\r\n                        end: e_point,\r\n                        right_q: right_q,\r\n                    })\r\n                }\r\n            }\r\n            this.draw = function () {\r\n                for (let i = 0; i < this.params.trunk.length; i++) {\r\n                    that.canvas.save();\r\n                    that.canvas.beginPath();\r\n                    that.canvas.fillStyle = 'rgba(139,119,101,0.7)'\r\n                    that.canvas.arc(this.params.trunk[i].x, this.params.trunk[i].y, this.params.trunk[i].radius, 0, 2 * Math.PI);\r\n                    that.canvas.fill();\r\n                    that.canvas.restore();\r\n                }\r\n                for (let i = 0; i < this.params.leafs.length; i++) {\r\n                    let leaf = this.params.leafs[i]\r\n                    that.canvas.save();\r\n                    that.canvas.beginPath();\r\n                    that.canvas.fillStyle = '#556B2F'\r\n                    that.canvas.moveTo(leaf.start.x, leaf.start.y)\r\n                    that.canvas.quadraticCurveTo(leaf.left_q.x, leaf.left_q.y, leaf.end.x, leaf.end.y)\r\n                    that.canvas.quadraticCurveTo(leaf.right_q.x, leaf.right_q.y, leaf.start.x, leaf.start.y)\r\n                    that.canvas.fill();\r\n                    that.canvas.restore();\r\n                }\r\n                new that.flower.daisy({\r\n                    x: this.params.trunk[this.params.trunk.length - 1].x,\r\n                    y: this.params.trunk[this.params.trunk.length - 1].y,\r\n                    radius: this.params.height / 6\r\n                })\r\n            }\r\n            this.setDaisyStruct()\r\n            this.draw()\r\n        }\r\n        that.grass.weed = function (params) {\r\n            let angle = that.floatRandom(250, 290)\r\n            let len = that.floatRandom(20, 50)\r\n            let end = {\r\n                x: params.x + len * Math.cos(angle *\r\n                    Math.PI / 180),\r\n                y: params.y + len * Math.sin(angle *\r\n                    Math.PI / 180)\r\n            }\r\n            let left_q = {\r\n                x: params.x + len * 0.5 * Math.cos((angle - 10) * Math.PI / 180),\r\n                y: params.y + len * 0.5 * Math.sin((angle - 10) * Math.PI / 180)\r\n            }\r\n            let right_q = {\r\n                x: params.x + len * 0.5 * Math.cos((angle + 10) * Math.PI / 180),\r\n                y: params.y + len * 0.5 * Math.sin((angle + 10) * Math.PI / 180)\r\n            }\r\n            that.canvas.save();\r\n            that.canvas.beginPath();\r\n            that.canvas.fillStyle = '#556B2F'\r\n            that.canvas.moveTo(params.x - 2, params.y)\r\n            that.canvas.quadraticCurveTo(left_q.x, left_q.y, end.x, end.y)\r\n            that.canvas.quadraticCurveTo(right_q.x, right_q.y, params.x + 2, params.y)\r\n            that.canvas.fill();\r\n            that.canvas.restore();\r\n        }\r\n    }\r\n}\r\nconst getAngle = ({ x: x1, y: y1 }, { x: x2, y: y2 })=> {\r\n    const dot = x1 * x2 + y1 * y2\r\n    const det = x1 * y2 - y1 * x2\r\n    const angle = Math.atan2(det, dot) / Math.PI* 180\r\n    return (angle + 360) % 360\r\n}\r\nexport default Landscape\n\n\n// WEBPACK FOOTER //\n// ./src/landscape.js","<template>\n  <div class=\"\">\n    <canvas id=\"canvas\"></canvas>\n  </div>\n</template>\n<script>\n  import Landscape from './landscape.js'\n  export default {\n    name: 'App',\n    data(){\n      return {}\n    },\n    mounted(){\n     let el = document.getElementById('canvas')\n     let w= window.innerWidth || document.body.clientWidth;\n     let h= window.innerHeight || document.body.clientHeight;\n     this.Landscape = new Landscape({\n       el: el,\n       background: 'rgba(255,255,255)',\n       width: w,\n        height: h\n     })\n    }\n  }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/landscape.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{},[_c('canvas',{attrs:{\"id\":\"canvas\"}})])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-b5b98f24\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/landscape.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./landscape.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./landscape.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-b5b98f24\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./landscape.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/landscape.vue\n// module id = null\n// module chunks = ","import Vue from 'vue'\nimport Router from 'vue-router'\nimport landscape from '@/landscape.vue'\n\nVue.use(Router)\n\nexport default new Router({\n  routes: [\n    {\n      path: '/',\n      name: 'landscape',\n      component: landscape\n    }\n  ]\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/route.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport App from './App'\nimport router from './route'\n\nVue.config.productionTip = false\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  router,\n  components: { App },\n  template: '<App/>'\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}